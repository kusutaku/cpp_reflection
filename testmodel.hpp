#pragma once

#include "reflection.hpp"

class TestModel : public Reflection {
private:
  int _testInt;
  long _testLong;
  float _testFloat;
  double _testDouble;
  bool _testBool;
  std::string _testString;

public:
  TestModel();

  // add this function
  void mapParameters();

  // ordinary accessors
  // (can be generated by IDE or scripting)
  int getTestInt() const;
  void setTestInt(int testInt);
  long getTestLong() const;
  void setTestLong(long testLong);
  float getTestFloat() const;
  void setTestFloat(float testFloat);
  double getTestDouble() const;
  void setTestDouble(double testDouble);
  bool getTestBool() const;
  void setTestBool(bool testBool);
  std::string getTestString() const;
  void setTestString(std::string testString);
};
